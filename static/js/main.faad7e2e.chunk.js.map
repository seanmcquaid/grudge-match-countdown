{"version":3,"sources":["components/UI/Text/Text.module.css","components/Navbar/Navbar.module.css","components/Timer/Timer.module.css","components/UI/SectionHeader/SectionHeader.module.css","components/Footer/Footer.module.css","components/MainContent/MainContent.module.css","hoc/Aux/Aux.js","components/UI/Text/Text.js","components/Navbar/Navbar.js","components/Footer/Footer.js","components/Layout/Layout.js","components/Timer/Timer.js","components/UI/SectionHeader/SectionHeader.js","components/MainContent/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Aux","props","children","Text","navBarText","leftNav","styles","leftNavTextContainer","rightNavTextContainer","className","textContainer","specialText","text","Navbar","navbarContainer","navLeft","navRight","rightNav","navRightLink","rel","href","target","Footer","footerContainer","Layout","Timer","useState","Date","currentDateTime","setCurrentDateTime","isGameTime","setIsGameTime","targetDateTime","useEffect","interval","getTime","setInterval","clearInterval","currentDateTimeInMilliseconds","milliSecondsUntilMatch","secondsUntilMatch","Math","floor","minutesUntilMatch","hoursUntilMatch","formattedSecondsUntilMatch","formattedMinutesUntilMatch","formattedHoursUntilMatch","timeString","toString","length","beforeGameTimeContent","afterGameTimeContent","youtubeVideo","title","src","frameborder","allow","allowfullscreen","gameTimeContainerStyles","afterGameTimeContainer","beforeGameTimeContainer","SectionHeader","subTitle","subTitleText","sectionHeaderContainer","titleText","MainContent","mainContentContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faad7e2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textContainer\":\"Text_textContainer__1ZQNI\",\"leftNavTextContainer\":\"Text_leftNavTextContainer__3dPaw\",\"rightNavTextContainer\":\"Text_rightNavTextContainer__3NC8G\",\"text\":\"Text_text__31Nvj\",\"specialText\":\"Text_specialText__1jLG-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"Navbar_navbarContainer__2w_-x\",\"navLeft\":\"Navbar_navLeft__poo7Z\",\"navRight\":\"Navbar_navRight__3_6t-\",\"navRightLink\":\"Navbar_navRightLink__1niQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"beforeGameTimeContainer\":\"Timer_beforeGameTimeContainer__3PI1S\",\"afterGameTimeContainer\":\"Timer_afterGameTimeContainer__1AaRP\",\"youtubeVideo\":\"Timer_youtubeVideo__22TNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionHeaderContainer\":\"SectionHeader_sectionHeaderContainer__2-t0c\",\"titleText\":\"SectionHeader_titleText__2TEnQ\",\"subTitleText\":\"SectionHeader_subTitleText__1REvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerContainer\":\"Footer_footerContainer__1s-3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContentContainer\":\"MainContent_mainContentContainer__2vw_L\"};","const Aux = props => props.children;\n\nexport default Aux;","import React from \"react\";\nimport styles from \"./Text.module.css\";\n\nconst Text = props => {\n    const navBarText = props.leftNav ? styles.leftNavTextContainer : styles.rightNavTextContainer; \n    // finish this navbar styling tomorrow\n    return(\n        <div className={props.navBarText ? navBarText : styles.textContainer}>\n            <p className={props.specialText ? styles.specialText : styles.text}>{props.children}</p>\n        </div>\n    )\n}\n\nexport default Text;","import React from \"react\";\nimport styles from \"./Navbar.module.css\";\nimport Text from \"../UI/Text/Text\";\n\nconst Navbar = props => {\n    return (\n        <div className={styles.navbarContainer}>\n            <div className={styles.navLeft}>\n                <Text navBarText={true} leftNav={true}>\n                    <span>T</span><span>S</span>Powerline\n                </Text>\n            </div>\n            <div className={styles.navRight}>\n                <Text navBarText={true} rightNav={true}>\n                    <a className={styles.navRightLink} rel=\"noopener noreferrer\" href=\"https://www.youtube.com/channel/UC2INmP2FrP9Zv_4QfOrmKww/featured\" target=\"_blank\">Youtube</a>\n                </Text>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport styles from \"./Footer.module.css\";\nimport Text from \"../UI/Text/Text\";\n\nconst Footer = props => {\n    return(\n        <div className={styles.footerContainer}>\n            <Text> Â© TSPowerline 2019</Text>\n        </div>\n    )\n}\n\nexport default Footer;","import React from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Footer from \"../Footer/Footer\";\n\nconst Layout = props => {\n    return(\n        <Aux>\n            <Navbar/>\n            {props.children}\n            <Footer/>\n        </Aux>\n    )\n}\n\nexport default Layout;","import React, {useState, useEffect} from \"react\";\nimport styles from \"./Timer.module.css\";\nimport Text from \"../UI/Text/Text\";\n\nconst Timer = props => {\n    const [currentDateTime, setCurrentDateTime] = useState(new Date());\n    const [isGameTime, setIsGameTime] = useState(false);\n    const targetDateTime = new Date(\"October 12, 2019 17:00:00 EST\");\n\n    useEffect(() => {\n        let interval;\n        if(currentDateTime.getTime() < targetDateTime.getTime()){\n            interval = setInterval(() => {\n                setCurrentDateTime(new Date());\n            }, 999)\n        } else {\n            setIsGameTime(true);\n        }\n        return () => clearInterval(interval);\n    }, [currentDateTime, isGameTime, targetDateTime])\n\n    const currentDateTimeInMilliseconds = currentDateTime.getTime();\n    const targetDateTimeInMilliseconds = targetDateTime.getTime();\n\n    const milliSecondsUntilMatch = targetDateTimeInMilliseconds - currentDateTimeInMilliseconds;\n    const secondsUntilMatch = Math.floor(milliSecondsUntilMatch / 1000);\n    const minutesUntilMatch = Math.floor(secondsUntilMatch / 60);\n    const hoursUntilMatch = Math.floor(minutesUntilMatch / 60);\n    const daysUntilMatch = Math.floor(hoursUntilMatch / 24);\n\n    const formattedSecondsUntilMatch = secondsUntilMatch % 60;\n    const formattedMinutesUntilMatch = minutesUntilMatch % 60;\n    const formattedHoursUntilMatch = hoursUntilMatch % 24;\n\n    const timeString = daysUntilMatch + \n        \" : \" + (formattedHoursUntilMatch.toString().length === 1 ? \"0\" : \"\") + formattedHoursUntilMatch + \n        \" : \" + (formattedMinutesUntilMatch.toString().length === 1 ? \"0\" : \"\") + formattedMinutesUntilMatch + \n        \" : \" + (formattedSecondsUntilMatch.toString().length === 1 ? \"0\" : \"\") +formattedSecondsUntilMatch;\n\n    const beforeGameTimeContent = <Text specialText={true}>{timeString}</Text>;\n    const afterGameTimeContent = <iframe className={styles.youtubeVideo} title=\"Stream Link\" src=\"https://www.youtube.com/embed/W0DLTB3uVPA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>;\n    \n    const gameTimeContainerStyles = isGameTime ? styles.afterGameTimeContainer : styles.beforeGameTimeContainer;\n    \n    return(\n        <div className={gameTimeContainerStyles}>\n            {currentDateTime.getTime() < targetDateTime.getTime() ? beforeGameTimeContent : afterGameTimeContent}\n        </div>\n    )\n}\n\nexport default Timer;","import React from \"react\";\nimport styles from \"./SectionHeader.module.css\";\n\nconst SectionHeader = props => {\n    const subTitle = props.subTitleText ? <h4 className={styles.subTitleText}>{props.subTitleText}</h4> : null;\n    return(\n        <div className={styles.sectionHeaderContainer}>\n            <h1 className={styles.titleText}>{props.titleText}</h1>\n            {subTitle}\n        </div>\n    )\n}\n\nexport default SectionHeader;","import React from \"react\";\nimport styles from \"./MainContent.module.css\";\nimport Timer from \"../Timer/Timer\";\nimport SectionHeader from \"../UI/SectionHeader/SectionHeader\";\n\nconst MainContent = props => {\n    return (\n        <div className={styles.mainContentContainer}>\n            <SectionHeader \n                titleText=\"TSPowerline Grudge Match 2019\" \n                subTitleText=\"KrispyKreme vs Caiserxs\"\n            />\n            <Timer />\n        </div>\n    )\n}\nexport default MainContent;","import React from 'react';\nimport Layout from \"./components/Layout/Layout\";\nimport MainContent from './components/MainContent/MainContent';\n\nconst App =  props => {\n  return (\n    <Layout>\n      <MainContent/>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}